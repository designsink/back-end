name: Deploy Spring Boot to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. JDK 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # 3. Gradle 빌드 (테스트 생략)
      - name: Build with Gradle
        run: ./gradlew build -x test

      # 4. Docker 이미지 빌드 및 .tar로 저장
      - name: Build Docker image
        run: |
          docker build -t dsink-back:latest .
          docker save dsink-back:latest > dsink-back.tar

      # 5. EC2에 .tar 복사
      - name: Copy image to EC2
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: dsink-back.tar
          target: /tmp/

      # 6. EC2에서 로드 ▶ 컨테이너 재시작
      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # 이미지 로드
            docker load < /tmp/dsink-back.tar

            # 기존 컨테이너 정리
            docker stop dsink-back || true
            docker rm dsink-back  || true

            # 새 컨테이너 실행
            docker run -d \
              --name dsink-back \
              --network dsink \
              -p 8080:8080 \
              -v ~/app/uploads:/app/uploads \
              -e DB_URL="$DB_URL" \
              -e DB_USERNAME="$DB_USERNAME" \
              -e DB_PASSWORD="$DB_PASSWORD" \
              -e JWT_SECRET_KEY="$JWT_SECRET_KEY" \
              -e FILE_UPLOAD="$FILE_UPLOAD" \
              --restart unless-stopped \
              dsink-back:latest

            # 임시 파일 및 불필요 이미지 정리
            rm -f /tmp/dsink-back.tar
            docker image prune -f

        env:
          DB_URL:       ${{ secrets.DB_URL }}
          DB_USERNAME:  ${{ secrets.DB_USERNAME }}
          DB_PASSWORD:  ${{ secrets.DB_PASSWORD }}
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          FILE_UPLOAD:  ${{ secrets.FILE_UPLOAD }}
